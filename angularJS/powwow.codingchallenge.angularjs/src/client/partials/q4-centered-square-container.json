core.injectItem({"target": "#question-3", "html":"<div class=\"well well-lg\"><div class=\"row\"><div class=\"col-md-8\"><h3>Mode 1</h3><div>Using position properties from the inner div with an absolute position. First, setting White square position set to [absolute], top-left-right-bottom distances to [0], and margin to [auto]</div></div><div class=\"col-md-4 graph-container mode-1\"><div class=\"red-square\"><div class=\"white-square\"></div></div></div></div><div class=\"row\"><div class=\"col-md-8\"><h3>Mode 2</h3><div>Using CSS3 support. Frist setting White and Red squares' margins to [auto]. Second setting Red Square display  to [flex] and align-items set to [center].</div></div><div class=\"col-md-4 graph-container mode-2\"><div class=\"red-square\"><div class=\"white-square\"></div></div></div></div><div class=\"row\"><div class=\"col-md-8\"><h3>Mode 3</h3><div><p>Using external plugins that allow set the behavior of external div's children elements.</p><ul><li>MS-Flexbox(Microsoft Internet Explorer)</li><li>MOZ-Box(Mozilla Firefox)</li><li>Webkit-box(Webkit based browsers)</li><li>\"Standart\"(W3C Specification)</li></ul></div></div><div class=\"col-md-4 graph-container mode-3\"><div class=\"red-square\"><div class=\"white-square\"></div></div></div></div><div class=\"row\"><div class=\"col-md-8\"><h3>Mode 4</h3><div>Using relational positioning between external and internal div. Setting and determining external div middle point, and translating inner div to a new anchor point(its own middle). First, setting external div position to relative. Second, setting inner div position to absolute. Finally, calculating left and top distance, and adjusting inned div position to be centered to its own center.</div></div><div class=\"col-md-4 graph-container mode-4\"><div class=\"red-square\"><div class=\"white-square\"></div></div></div></div></div>"})